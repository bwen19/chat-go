// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.22.0
// source: message.sql

package sqlc

import (
	"context"
	"time"
)

const deleteMessageByUser = `-- name: DeleteMessageByUser :exec
DELETE FROM messages
WHERE
    sender_id = $1::bigint OR
    room_id = ANY($2::bigint[])
`

type DeleteMessageByUserParams struct {
	UserID  int64   `json:"user_id"`
	RoomIds []int64 `json:"room_ids"`
}

func (q *Queries) DeleteMessageByUser(ctx context.Context, arg *DeleteMessageByUserParams) error {
	_, err := q.db.Exec(ctx, deleteMessageByUser, arg.UserID, arg.RoomIds)
	return err
}

const insertMessage = `-- name: InsertMessage :exec
INSERT INTO messages (
    room_id, sender_id, content, kind, send_at
) VALUES (
    $1, $2, $3, $4, $5
)
`

type InsertMessageParams struct {
	RoomID   int64     `json:"room_id"`
	SenderID int64     `json:"sender_id"`
	Content  string    `json:"content"`
	Kind     string    `json:"kind"`
	SendAt   time.Time `json:"send_at"`
}

func (q *Queries) InsertMessage(ctx context.Context, arg *InsertMessageParams) error {
	_, err := q.db.Exec(ctx, insertMessage,
		arg.RoomID,
		arg.SenderID,
		arg.Content,
		arg.Kind,
		arg.SendAt,
	)
	return err
}
