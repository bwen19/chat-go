// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.21.0
// source: room.sql

package db

import (
	"context"
)

const createRoom = `-- name: CreateRoom :one
INSERT INTO rooms (
    name, cover, category
) VALUES (
    $1, $2, $3
) RETURNING
    id, name, cover, category, create_at
`

type CreateRoomParams struct {
	Name     string `json:"name"`
	Cover    string `json:"cover"`
	Category string `json:"category"`
}

func (q *Queries) CreateRoom(ctx context.Context, arg CreateRoomParams) (Room, error) {
	row := q.db.QueryRow(ctx, createRoom, arg.Name, arg.Cover, arg.Category)
	var i Room
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.Cover,
		&i.Category,
		&i.CreateAt,
	)
	return i, err
}

const deleteRooms = `-- name: DeleteRooms :exec
DELETE FROM rooms
WHERE id = ANY($1::bigint[])
`

func (q *Queries) DeleteRooms(ctx context.Context, roomIds []int64) error {
	_, err := q.db.Exec(ctx, deleteRooms, roomIds)
	return err
}
